{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/install-memcached","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Install Memcached\",\n  \"tags\": [\"cache\", \"memcached\", \"optimizations\"],\n  \"link\": \"https://github.com/thundersquared/apiscp-memcached\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"You can install Memcached via addin.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"cd /usr/local/apnscp/resources/playbooks\\ngit clone https://github.com/thundersquared/apiscp-memcached.git addins/apiscp-memcached\\nansible-playbook addin.yml --extra-vars=addin=apiscp-memcached\\n\")), mdx(\"p\", null, \"You should then (re)build your PECL packages:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"upcp -sb php/install-pecl-module\\n\")), mdx(\"p\", null, \"And if you're using Multi-PHP, (re)build PECL packges for that too:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"cd /usr/local/apnscp/resources/playbooks\\nansible-playbook bootstrap.yml --tags=php/install-pecl-module --extra-vars=php_version=7.4 --extra-vars=multiphp_build=true\\n\")), mdx(\"p\", null, \"Then start using your freshly installed \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"memcached\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"memcached -p 40010 -m 128\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Install Memcached","tags":["cache","memcached","optimizations"],"emoji":null,"link":"https://github.com/thundersquared/apiscp-memcached"},"fields":{"dateModified":"13th Jun 2020"},"parent":{"__typename":"File","name":"install-memcached","fileName":"install-memcached.md"}}},"pageContext":{"id":"71bb51cd-675e-51ff-abcc-63771f407fe0","previous":{"id":"89633dbd-f8eb-5724-b98f-39f8cddfa284","frontmatter":{"title":"Install Yarn","tags":["yarn","node","nodejs"]},"parent":{"name":"install-yarn","base":"install-yarn.md"}},"next":null,"hasUntagged":false,"basePath":"/"}}}